version: '2'
services:
  reverse_proxy:
    build:
      context: ./dockerfiles/reverse-proxy
      dockerfile: Dockerfile
    container_name: reverse_proxy
    ports:
      - "80:80"
      - "443:443"
    links:
      - "api:api.local"
      - "web:web.local"

  api:
    image: toddmohney/feature-creature-dev:v4
    command: stack exec feature-creature-web
    container_name: feature-creature
    env_file:
      - ./env/development.env
    links:
      - "database:database.local"
      - "message_bus:message_bus.local"
      - "search:search.local"
      - "features-api:features-api.local"
    ports:
      - "8081:8081"

  features-api:
    image: toddmohney/feature-creature-dev:v4
    command: stack exec features-api
    container_name: features-api
    depends_on:
      - data
      - message_bus
    env_file:
      - ./env/development.env
    links:
      - "database:database.local"
      - "message_bus:message_bus.local"
      - "search:search.local"
    ports:
      - "8082:8082"
    volumes_from:
      - data:rw

  repo-puller:
    image: toddmohney/feature-creature-dev:v4
    command: stack exec repo-puller
    container_name: repo-puller
    stdin_open: true
    tty: true
    depends_on:
      - data
      - message_bus
    env_file:
      - ./env/development.env
    links:
      - "database:database.local"
      - "message_bus:message_bus.local"
    volumes_from:
      - data:rw

  repo-refresher:
    image: toddmohney/feature-creature-dev:v4
    container_name: repo-refresher
    command: stack exec repo-refresher
    depends_on:
      - api
      - data
    env_file:
      - ./env/development.env
    links:
      - "database:database.local"
      - "search:search.local"
    volumes_from:
      - data:rw

  web:
    build:
      context: ./feature-creature-client
      dockerfile: Dockerfile
    command: rackup --host 0.0.0.0 --port 4567
    container_name: feature-creature-client
    depends_on:
      - api
    env_file:
      - ./env/development.env
    links:
      - "api:api.local"
    ports:
      - "4567:4567"

  search_service:
    image: toddmohney/feature-creature-dev:v4
    container_name: search-service
    command: stack exec search-service
    stdin_open: true
    tty: true
    depends_on:
      - api
      - message_bus
    env_file:
      - ./env/development.env
    links:
      - "features-api:features-api.local"
      - "message_bus:message_bus.local"
      - "search:search.local"
    volumes_from:
      - data:rw

  data:
    build:
      context: ./dockerfiles/datacontainer
      dockerfile: Dockerfile
    container_name: shared-data
    command: /bin/echo "Data container created!"
    volumes:
      - "/usr/share/feature-creature-data"

  database:
    image: postgres:9.4.6
    environment:
      POSTGRES_DB: feature_creature
      POSTGRES_USER: feature_creature
      PG_DATA: "/var/lib/postgresql/data/pgdata"

  # ElasticSearch:
  # https://gist.github.com/benjamin-smith/78d330e08994fb5ce0de
  search:
    build:
      context: ./dockerfiles/elasticsearch
      dockerfile: Dockerfile
    ports:
      - "9200:9200"
      - "9300:9300"
      - "9100:9100" # http://search.local:9100 head plugin

  message_bus:
    image: rabbitmq:3.6.1-management
    ports:
      - "15672:15672"

